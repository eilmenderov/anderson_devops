---
# tasks file for create_service
# ping - pong to host
  - name: task_ping
    ping: 

# update vm
  - name: update_vm
    apt:
      update_cache: yes
      force_apt_get: yes

# upgrade vm
  - name: upgrade_vm
    apt:
      upgrade: yes

# create new group for user
  - name: create_new_group
    group:
      name: "{{work_user}}"
      state: present

# create new user
  - name: create_new_user
    user:
      name: "{{work_user}}"
      shell: /bin/bash
      groups: root
      append: yes
      home: "/home/{{work_user}}"

# create folder
  - name: create_folder
    file:
      path: "/home/{{work_user}}/.ssh"
      state: directory

# copy file from server to client
  - name: copy_public_ssh_to_vm
    copy:
      src: "{{pub_ssh_srcs}}"
      dest: "/home/{{work_user}}/.ssh/"

# copy file from server to client
  - name: copy_service
    copy:
      src: "{{file_srcs}}"
      dest: "{{file_dest}}"

# install programms
  - name: instal_progs
    apt:
      pkg: "{{pakages}}"
      state: present

# install docker
  - name: Update apt packages
    apt:
      update_cache: "yes"
      force_apt_get: "yes"

  - name: Install packages needed for Docker
    apt:
      name: "{{ DOCKER_PACKAGES }}"
      state: present
      force_apt_get: "yes"

  - name: Add Docker GPG apt Key
    apt_key:
      url: https://download.docker.com/linux/debian/gpg
      state: present

  - name: Save the current debian release version into a variable
    shell: lsb_release -cs
    register: debian_version

  - name: Add Docker Repository
    apt_repository:
      repo: "deb [arch=amd64] https://download.docker.com/linux/debian {{ debian_version.stdout }} stable"
      state: present

  - name: Update apt packages
    apt:
      update_cache: "yes"
      force_apt_get: "yes"

  - name: Install Docker
    apt:
      name: "docker-ce"
      state: present
      force_apt_get: "yes"

  - name: Test Docker with hello world example
    shell: "docker run hello-world"
    register: hello_world_output

  - name: Show output of hello word example
    debug:
      msg: "Container Output: {{hello_world_output.stdout}}"

  - name: Create docker group
    group:
      name: "docker"
      state: present

  - name: Adding user {{ USER }} to docker group
    user:
      name: "{{ USER }}"
      groups: "docker"
      append: "yes"

  - name: Install Docker Compose
    get_url:
      url: https://github.com/docker/compose/releases/download/{{ DOCKER_COMPOSE_VERSION }}/docker-compose-Linux-x86_64
      dest: "/usr/local/bin/docker-compose"
      mode: 0755

  - name: Install Ctop
    get_url:
      url: https://github.com/bcicen/ctop/releases/download/v{{ CTOP_VERSION }}/ctop-{{ CTOP_VERSION }}-linux-amd64
      dest: "/usr/local/bin/ctop"
      mode: 0755

# Build service in docker
  - name: service_build
    shell: "cd /home/{{work_user}}/service && docker build -t service ."
    register:

  - name: Allow connections on multiple ports
    ansible.builtin.iptables:
      chain: INPUT
      protocol: tcp
      destination_ports:
        - "80"
        - "443"
        - "22"
      jump: ACCEPT

#   - name: Reboot server in order for changes to take place
#     shell: "sleep 1 && reboot"
#     async: 1
#     poll: 0
